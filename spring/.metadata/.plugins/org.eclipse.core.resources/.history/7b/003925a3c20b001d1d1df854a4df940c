
http://localhost:8090/spring/ 으로 실행해보기

2022.07.25

프로젝트 구조

1. src/main/java
	- 여태까지 사용하던 Java 소스 폴더

2. src/main/resources
	- Java 소스 이외의 자원을 관리하는 폴더
	- 설정

3. src/test/java
	- 테스트용 폴더

4. src/test/resources
	- 테스트용 폴더

5. JRE System Library
	- JRE jar

6. Maven Dependencies
	- 메이븐(빌드 도구 + 라이브러리 관리 도구 등)
	- 프로젝트 생성 & 유지 관리 & 배포를 도와주는 프로그램
	- 수업용 > jar 파일들 관리용도로 사용
	- Spring은 Maven or Gradle 사용
7. src
	- 1~4 까지의 물리적 표현
	- 소스의 루트 폴더
	
	7.1 webapp
		- 웹 루트 폴더
	
	7.2 webapp > resources
		- CSS, JavaScript, Images 등을 저장하는 폴더
	
	7.3 webapp > WEB-INF (*****************************)
		
		7.3.1 classes
			- 컴파일된 클래스 파일 저장폴더
			- 개발자 관여(x)
		7.3.2 spring
			- 이 폴더 이하에서 모든 스프링 설정을 한다. (**********)
			
			7.3.2.1 appServlet
				7.3.2.1.1 servlet-context.xml
					- 웹 요청과 관련된 환경설정
			
			7.3.2.2 root-context.xml
				- 스프링 전체 환경 설정
				
		7.3.3 views
			- 뷰 페이지 폴더
			
		7.3.4 web.xml
			- 아파치 톰캣 서버 설정
			
스프링 프레임워크, Spring Framework

- http://spring.io
- Spring 3.XX ~ 5.XX
- 스프링 프레임워크는 자바 플랫폼을 위한 오픈 소스 애플리케이션 프레임워크이다.
- 전자 정부 표준 프레임워크로 채택 > http://www.egovframe.go.kr/
- 세팅된 개발 환경 제공 + 생산성 + 개발 편의성 + 유지/보수성 + 협업 > 대형 프로젝트

스프링 프레임워크 구성 요소

1. 의존성 주입 지원(DI)
2. 관점 지향 프로그래밍 지원(AOP)
3. Spring MVC 지원
4. 레이아웃 지원(Tiles)
5. 데이터베이스 연동 지원
	- JDBC
	- Spring JDBC
	- ORM(JPA)
	- MyBatis

Spring DI
- Dependency Injection
- 의존(성) 주입
- 스프링에서 아주 중요한 개념 중 하나
- 스프링 전반에 걸쳐서 DI가 적용되어 있음	